
##################################
## Attacking the Firmware ########
##################################

       --------------------------------------------------------------------------------------------------------------------------------------------------------------
       | 1 | Breve descripción																	    |
       --------------------------------------------------------------------------------------------------------------------------------------------------------------
         "Firmware" is software stored as a read-only-memory (ROM) on a device used to enable the hardware and provide the device functionality.
         
         Firmware shipped with APs commonly has vulnerabilities that are discovered over a period of time. The only way to patch these vulnerabilities is to update 
         the firmware on the device.
         
         During a pentest there is a high likelihood of discovering and AP with outdated firmware.
         
         In this section we will discuss different ways to gain access to the device by exploiting various vulnerabilities in wireless devices that are publicly 
         disclosed. We will use exploit code taken from: www.exploit-db.com          
                     

##################################
## Authentication bypass #########
##################################

       --------------------------------------------------------------------------------------------------------------------------------------------------------------
       | 1 | Breve descripción																	    |
       --------------------------------------------------------------------------------------------------------------------------------------------------------------
	A web service is very common on APs. To access these web interfaces: default user/pass.
	However, during our pentest we may want to be able to get around this requirement: bypass the authentication.
	There are a number of techniques:
	
		A) Simplest way: try guessing credentials or mount a dictionary attack to brute force the credentials. [Debe ser nuestro ÚLTIMO RECURSO]
		B) Sophisticated way: to try different attacks that are common against other web-based applications.
		
	Nota: Common Vulnerability Exposure (CVE) Database: https://cve.mitre.org/
		

#######################################
## Cross-Site Request Forgery (CSRF) ##
#######################################

       --------------------------------------------------------------------------------------------------------------------------------------------------------------
       | 1 | Breve descripción																	    |
       --------------------------------------------------------------------------------------------------------------------------------------------------------------

	¿Qué es CSRF? 
	  - It occurs when a malicious website, e-mail or program causes the victim's web browser to perform an unwanted action on a trusted site on which
	              they are currently authenticated.
	  - Es un método por el cual un usuario malintencionado intenta hacer que tus usuarios, sin saberlo, envíen datos que no quieren enviar.
	  
	Pre-requisito: the user should already be logged in to the target vulnerable application; in our case it is an authenticated session with the AP ir wireless
	               router.
	               
       --------------------------------------------------------------------------------------------------------------------------------------------------------------
       | 2 | Fases																		    |
       --------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	Las 3 fases son:
	
	  A) The first stage in exploiting CSRF is to know the parameters needed to be passed to the vulnerable application.
	
	  B) Once the paremeters are decided, then the malicious payload can be crafted.
	
	  C) The actual delivery of the malicious payload to the user takes place; it can be via an e-mail or simple image tags or hidden forms, JavaScript, and so on.
	
	There are many ways to deliver the malicious CSRF payload. We will use image tags as our delivery method in the following examples.


###############################
## Remote Code Execution ######
###############################

       --------------------------------------------------------------------------------------------------------------------------------------------------------------
       | 1 | Breve descripción																	    |
       --------------------------------------------------------------------------------------------------------------------------------------------------------------

	Arbitrary code execution is possible by leveraging a software bug that allows an attacker to execute arbitrary code.
	This is normally achieved by exploiting a stack or buffer overflow vulnerability in a software.These vulnerabilities allow the execution of shell code (machine
	code) delivered along with the exploit to perform malicious activity.
	
	There are readily available shell codes to perform various tasks at: http://shell-storm.org/shellcode/ 


###########################
## Command Injection ######
###########################

       --------------------------------------------------------------------------------------------------------------------------------------------------------------
       | 1 | Breve descripción																	    |
       --------------------------------------------------------------------------------------------------------------------------------------------------------------

	Command Injection is an attack in which the goal is the execution of arbitrary commands on the host operating system via a vulnerable application.
	It is tipically achieved by leveraging CGI scripts that takes input from the user and performs some action on the device.
	
	Exploiting "Command Injection" is easier than an "Arbitrary Code Execution".
	
========================================================================================================================================================================================
========================================================================================================================================================================================

##################################
## Attacking the Services ########
##################################

       --------------------------------------------------------------------------------------------------------------------------------------------------------------
       | 1 | Breve descripción																	    |
       --------------------------------------------------------------------------------------------------------------------------------------------------------------
                     
	Most wireless devices host a common set of services for management. Tipically a "web server component" can be found on every wireless device for web-based
	management.

       ######################
       ## Attacking Telnet ##
       ######################

	Telnet is a remote access service that enables management and configuration changes via command-line.
	Telnet is a clear text protocol; the "username" and "password", or any other commands sent to the device can be easily sniffed by anyone in between the Telnet
	client and server.

       ######################
       ## Attacking SSH    ##
       ######################

	Secure Shell (SSH) is a tool to log in to another computer over a network in order to execute commands on the remote machine.
	SSH encrypts the underlying connection, thus it can be used over unsecure communication channels.
	Alternative to Telnet.
	
	"Brute forcing SSH"
	--------------------
	
	It is a common way that attackers attempt to gain acces to devices and gain administrative access.
	This process is simplified by tools found on Kali distribution: Hydra
	
	Hydra ==> a command line tool for brute force:
	
	
		1) Download a common password list or create you own based on your knowledge of the organization you are testing. If you need a generic one: 
		
			https://github.com/jeanphorn/wordlist
		
		2) Open a command line and launch "hydra-wizard":
		
		    >hydra-wizard
		    
		3) Pedirá los siguientes parámetros:
		
		    - Servicio a atacar (ftp, ssh, http-post-form):
		    - Dirección IP:
		    - Nombre de usuario
		    - Password (nombre del fichero descargado en el paso 1) )
		    - Numero de puerto (ssh 22, ftp 21, etc.)
		    
		4) Ejecutamos. Nos debería de dar un resultado si ha encontrado alguna contraseña válida en el diccionario del paso 1).
		
		

       ######################
       ## Attacking SNMP   ##
       ######################

	Simple Network Management Protocol (SNMP) is specified in RFC 1157 and is a widely used application layer protocol for network management.
	Virtually all devices support SNMP.
	SNMP architecture contains "Managers" and "Agents":
	
		A) Manager: is a software application responsible for interacting with Agents and getting their management information via SNMP.
		B) Agent: is a software module in a managed device responsible for maintaining local management information and delivering that information to Manager via SNMP.
		C) MIB: Local management information is stored in the form of objects. Each object represents one aspect of a managed agent and as a unique object identifier (OID).
		        These objects are collected into a hierarchy tree structure called MIB (Management Information Base).
	¿Cómo funciona?
	---------------
	
	The data exchanged in SNMP is very simple. Either Manager can initiate a request to Agent to get the information or Agent can send data to Manager voluntarily
	by using "Trap messages".

========================================================================================================================================================================================
========================================================================================================================================================================================


#####################################
## Checks on Misconfiguration #######
#####################################

       --------------------------------------------------------------------------------------------------------------------------------------------------------------
       | 1 | Breve descripción																	    |
       --------------------------------------------------------------------------------------------------------------------------------------------------------------
                     
